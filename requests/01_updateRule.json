{"callback":null,"headers":[],"id":"1","method": "updateRule", "params": ["rule2","import jp.ac.kyoto_u.i.soc.ai.iostbase.event.TimerEvent;\nimport jp.ac.kyoto_u.i.soc.ai.iostbase.service.intf.Event;\nimport jp.ac.kyoto_u.i.soc.ai.iostbase.EventStore;\n\nglobal EventStore eventStore;\n\nrule \"rule1\"\nwhen\n  $time: TimerEvent()\n  $req:Event(deviceId.contains(\"request:comfortability\") && ($time.getTime() - created.getTime()) <  10 * 1000)\n  $temp:Event(dataType == \"temperature\" && placeTag == $req.getPlaceTag())  \n  $humid:Event(dataType == \"humidity\" && placeTag == $req.getPlaceTag())\n  not Event(dataType == \"comfortability\" && ($time.getTime() - created.getTime()) <  3 * 1000)\nthen\n  eventStore.insert(new Event(\"event\", \"comfortability\", $req.getPlaceTag(), null, null,((Double.valueOf($temp.getValue().toString()) * 0.81)+(0.01 * Double.valueOf($humid.getValue().toString())*((0.99 * Double.valueOf($temp.getValue().toString()))-14.3)+46))));\nend\n\nrule \"riskofcovid19\"\nwhen\n  $time: TimerEvent()\n  $req:Event(deviceId.contains(\"request:risk\") && ( $time.getTime() - created.getTime()) <  10*1000)\n  $temp:Event(dataType == \"temperature\" && placeTag == $req.getPlaceTag()) \n  $humid:Event(dataType == \"humidity\" && placeTag == $req.getPlaceTag())\n  not Event(dataType == \"risk\" && ($time.getTime()-created.getTime()) <  3 * 1000)\nthen\n  double t = Double.valueOf($temp.getValue().toString());\n  double RH = Double.valueOf($humid.getValue().toString());\n  eventStore.insert(new Event(\"event\", \"risk\", $req.getPlaceTag(), null, null,217*(6.1078*Math.pow(10,(7.5*t/(t+237.3)))/(t+273.15)*RH/100)));\nend\n\nrule \"kandansa\"\nwhen\n  $time: TimerEvent()\n  $req:Event(deviceId.contains(\"request:kanki\") && ($time.getTime()-created.getTime()) <  10 * 1000)\n  $temp1:Event(dataType == \"window\" && placeTag == $req.getPlaceTag() && value == 1 && ($time.getTime()-(created.getTime()*1000-32400*1000)) <  60 * 1000)\n  not Event(dataType == \"kanki\" && ($time.getTime()-created.getTime()) <  3 * 1000)\nthen\n  System.out.printf(\"[timer] timer:%d%n\", $time.getTime());\n  eventStore.insert(new Event(\"event\", \"kanki\", $req.getPlaceTag(), null, null,\"換気は十分\"));\nend\n\nrule \"kandansa2\"\nwhen\n  $time: TimerEvent()\n  $req:Event(deviceId.contains(\"request:kanki\") && ($time.getTime()-created.getTime()) <  10 * 1000)\n  not Event(dataType == \"kanki\"  && ($time.getTime()-created.getTime()) <  10 * 1000)\n  not Event(dataType == \"window\" && placeTag == $req.getPlaceTag() && value == 0 && ($time.getTime()-((created.getTime()-32400)*1000)) <  60 * 1000)\nthen\n  System.out.printf(\"[timer] timer:%d%n\", $time.getTime());\n  eventStore.insert(new Event(\"event\", \"kanki\", $req.getPlaceTag(), null, null,\"換気が必要\"));\nend\n\n\nrule \"kandansa3\"\nwhen\n  $time: TimerEvent()\n  $req:Event(deviceId.contains(\"request:kanki\") && ($time.getTime()-created.getTime()) <  10 * 1000)\n  $temp1:Event(dataType == \"window\" && placeTag == $req.getPlaceTag() && value == 0 && ($time.getTime()-(created.getTime()*1000-32400*1000)) <  60 * 1000)\n  not Event(dataType == \"kanki\" && ($time.getTime()-created.getTime()) <  3 * 1000)\nthen\n  System.out.printf(\"[timer] timer:%d%n\", $time.getTime());\n  eventStore.insert(new Event(\"event\", \"kanki\", $req.getPlaceTag(), null, null,\"換気は十分\"));\nend\n\n"]}